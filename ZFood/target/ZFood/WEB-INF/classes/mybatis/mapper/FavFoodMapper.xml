<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nhvzg.dao.FavFoodMapper" >
  <resultMap id="BaseResultMap" type="com.nhvzg.entity.FavFood" >
    <id column="fav_food_id" property="favFoodId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="food_id" property="foodId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    fav_food_id, user_id, food_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from favfood
    where fav_food_id = #{favFoodId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from favfood
    where fav_food_id = #{favFoodId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.nhvzg.entity.FavFood" >
    insert into favfood (fav_food_id, user_id, food_id
      )
    values (#{favFoodId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{foodId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nhvzg.entity.FavFood" >
    insert into favfood
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="favFoodId != null" >
        fav_food_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="foodId != null" >
        food_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="favFoodId != null" >
        #{favFoodId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="foodId != null" >
        #{foodId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nhvzg.entity.FavFood" >
    update favfood
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="foodId != null" >
        food_id = #{foodId,jdbcType=VARCHAR},
      </if>
    </set>
    where fav_food_id = #{favFoodId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nhvzg.entity.FavFood" >
    update favfood
    set user_id = #{userId,jdbcType=VARCHAR},
      food_id = #{foodId,jdbcType=VARCHAR}
    where fav_food_id = #{favFoodId,jdbcType=VARCHAR}
  </update>

  <select id="getAll" resultMap="BaseResultMap">
    select * from favfood
  </select>

  <resultMap id="FavFoodMsg" type="com.nhvzg.result.FavFoodMsg">
    <result column="fav_food_id" property="favFoodId" jdbcType="VARCHAR" />
    <result column="food_id" property="foodId" jdbcType="VARCHAR" />
    <result column="foodName" property="foodName" jdbcType="VARCHAR" />
    <result column="shop_id" property="shopId" jdbcType="VARCHAR" />
    <result column="shopName" property="shopName" jdbcType="VARCHAR" />
    <result column="headPic" property="shopPic" jdbcType="VARCHAR" />
    <result column="pic" property="foodPic" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getFavFood" resultMap="FavFoodMsg" parameterType="java.lang.String">
    SELECT fff.*,s.shopName,s.headPic  FROM
(SELECT ff.fav_food_id,f.food_id,f.`name` as foodName ,f.shop_id,f.pic FROM favfood ff INNER JOIN food f on f.food_id=ff.food_id where ff.user_id=#{userId,jdbcType=VARCHAR})
fff INNER JOIN shop s on s.shop_id=fff.shop_id;
  </select>


  <insert id="addFavFoodsList" parameterType="java.util.List">
    insert into favfood (fav_food_id, user_id, food_id) values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.favFoodId,jdbcType=VARCHAR},#{item.userId,jdbcType=VARCHAR},#{item.foodId,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <delete id="deleteFavFoodList" parameterType="java.util.List">
    delete from favfood where fav_food_id in
    <foreach item="item" collection="list" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

</mapper>